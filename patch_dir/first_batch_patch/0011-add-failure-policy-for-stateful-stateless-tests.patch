From dcff7ef9e6c38fe335e71e98167dadbb0e17ca1b Mon Sep 17 00:00:00 2001
From: Shanfeng Pang <shanfengp@moqi.ai>
Date: Tue, 6 Dec 2022 14:32:56 +0000
Subject: [PATCH 011/150] add failure policy for stateful/stateless tests

---
 .gitlab-ci.yml                           | 12 +++
 docker/builder/tools/check_job_states.sh | 94 ++++++++++++++++++++++++
 docker/builder/tools/stateful-test.sh    |  6 +-
 docker/builder/tools/stateless-test.sh   |  8 +-
 docker/test/mqdb_run_stateless/run.sh    |  4 +-
 5 files changed, 121 insertions(+), 3 deletions(-)
 create mode 100755 docker/builder/tools/check_job_states.sh

diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
index d00dd3cb28..7c4194af31 100644
--- a/.gitlab-ci.yml
+++ b/.gitlab-ci.yml
@@ -60,10 +60,16 @@ stateless_test:
       - ARCH: arm64
   tags:
     - ${ARCH}
+  artifacts:
+    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stateless-test"
+    paths:
+      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
+    when: always
   before_script:
     - docker/builder/tools/docker-info.sh
   script:
     - docker/builder/tools/stateless-test.sh
+    - if [[ ${ARCH} == "amd64" ]];then docker/builder/tools/check_job_states.sh mqdb_run_stateless; fi
 
 stateful_test:
   stage: test
@@ -74,10 +80,16 @@ stateful_test:
       - ARCH: arm64
   tags:
     - ${ARCH}
+  artifacts:
+    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stateful-test"
+    paths:
+      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateful/test_output
+    when: always
   before_script:
     - docker/builder/tools/docker-info.sh
   script:
     - docker/builder/tools/stateful-test.sh
+    - if [[ ${ARCH} == "amd64" ]];then docker/builder/tools/check_job_states.sh mqdb_run_stateful; fi
 
 build_package:
   stage: package
diff --git a/docker/builder/tools/check_job_states.sh b/docker/builder/tools/check_job_states.sh
new file mode 100755
index 0000000000..67df6788c2
--- /dev/null
+++ b/docker/builder/tools/check_job_states.sh
@@ -0,0 +1,94 @@
+#!/usr/bin/env bash
+set -e
+
+TEST_NAME=${1:-NONE}
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+PROJECT_PATH=$CUR_DIR/../../..
+WORKPATH=$PROJECT_PATH/docker/test/$TEST_NAME/test_output
+
+function check_stateless
+{
+    TESTS_STATE=$(cat $WORKPATH/check_status.tsv | awk '{print $1}')
+    cat $WORKPATH/check_status.tsv
+    if [[ "$TESTS_STATE" == "failure" ]]; then
+        echo "test error, please check the test log"
+        exit 1
+    else
+        echo "test pass"
+    fi
+}
+
+function check_stateful
+{
+    TESTS_STATE=$(cat $WORKPATH/check_status.tsv | awk '{print $1}')
+    cat $WORKPATH/check_status.tsv
+    if [[ "$TESTS_STATE" == "failure" ]]; then
+        echo "test error, please check the test log"
+        exit 1
+    else
+        echo "test pass"
+    fi
+}
+
+function check_fuzzer
+{
+    TEST_STATE=$(cat $WORKPATH/report.html | grep '<tr><td>AST Fuzzer</td><td>' | grep 'success' | wc -l)
+    if [[ "$TESTS_STATE" == "0" ]]; then
+        echo "test error, please check the test log"
+        exit 1
+    else
+        echo "test pass"
+    fi
+}
+
+function check_smoke
+{
+    TESTS_STATE=$(cat $WORKPATH/check_status.tsv | awk '{print $1}')
+    cat $WORKPATH/check_status.tsv
+    if [[ "$TESTS_STATE" != "success" ]]; then
+        echo "test error, please check the test log"
+        exit 1
+    else
+        echo "test pass"
+    fi
+}
+
+function check_stress
+{
+    TESTS_STATE=$(cat $WORKPATH/check_status.tsv | awk '{print $1}')
+    cat $WORKPATH/check_status.tsv
+    if [[ "$TESTS_STATE" == "failure" ]]; then
+        echo "test error, please check the test log"
+        exit 1
+    else
+        echo "test pass"
+    fi
+}
+
+function check_performance
+{
+    echo "don't support"
+}
+
+function check_integration
+{
+    echo "don't support"
+}
+
+if [[ "$TEST_NAME" == "mqdb_run_stateful" ]]; then
+    check_stateful
+elif [[ "$TEST_NAME" == "mqdb_run_stateless" ]]; then
+    check_stateless
+elif [[ "$TEST_NAME" == "mqdb_run_fuzzer" ]]; then
+    check_fuzzer
+elif [[ "$TEST_NAME" == "mqdb_run_smoke" ]]; then
+    check_smoke
+elif [[ "$TEST_NAME" == "mqdb_run_stress" ]]; then
+    check_stress
+elif [[ "$TEST_NAME" == "mqdb_run_performance" ]]; then
+    check_performance
+elif [[ "$TEST_NAME" == "mqdb_run_integration" ]]; then
+    check_integration
+else
+    echo "please entry the correct test name"
+fi
\ No newline at end of file
diff --git a/docker/builder/tools/stateful-test.sh b/docker/builder/tools/stateful-test.sh
index e39bf50b1a..1d284af888 100755
--- a/docker/builder/tools/stateful-test.sh
+++ b/docker/builder/tools/stateful-test.sh
@@ -1,6 +1,10 @@
 #!/usr/bin/env bash
 set -e
 
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+PROJECT_PATH=$CUR_DIR/../../..
+WORKPATH=$PROJECT_PATH/docker/test/mqdb_run_stateful
+
 cp -rfv artifacts/clickhouse-*.deb docker/test/mqdb_run_stateful/packages
 cp -rfv tests/queries docker/test/mqdb_run_stateful/tests/
 cp -rfv tests/performance docker/test/mqdb_run_stateful/tests/
@@ -9,7 +13,7 @@ cp -rfv tests/config docker/test/mqdb_run_stateful/tests/
 docker rmi -f run-stateful-test >/dev/null 2>&1 || true
 docker build --rm=true -t run-stateful-test docker/test/mqdb_run_stateful
 
-docker run --rm --user root --cap-add=SYS_PTRACE -e MAX_RUN_TIME=9720 -e ADDITIONAL_OPTIONS="--hung-check --print-time" --name stateful-test run-stateful-test
+docker run --rm --user root --volume=$WORKPATH/test_output:/test_output --cap-add=SYS_PTRACE -e MAX_RUN_TIME=9720 -e ADDITIONAL_OPTIONS="--hung-check --print-time" --name stateful-test run-stateful-test
 
 docker rmi -f run-stateful-test >/dev/null 2>&1 || true
 docker rm -f stateful-test >/dev/null 2>&1 || true
diff --git a/docker/builder/tools/stateless-test.sh b/docker/builder/tools/stateless-test.sh
index 23545d59ca..062ff03609 100755
--- a/docker/builder/tools/stateless-test.sh
+++ b/docker/builder/tools/stateless-test.sh
@@ -1,15 +1,21 @@
 #!/usr/bin/env bash
 set -e
 
+CUR_DIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
+PROJECT_PATH=$CUR_DIR/../../..
+WORKPATH=$PROJECT_PATH/docker/test/mqdb_run_stateless
+
 cp -rfv artifacts/clickhouse-*.deb docker/test/mqdb_run_stateless/packages
+# rsync -a --exclude={'queries/2_vector_search','queries/3_ai_core_support'} ${PROJECT_PATH}/tests/queries $WORKPATH/tests/.
 cp -rfv tests/queries docker/test/mqdb_run_stateless/tests/
+rm -rf docker/test/mqdb_run_stateless/tests/queries/2_vector_search docker/test/mqdb_run_stateless/tests/queries/3_ai_core_support
 cp -rfv tests/performance docker/test/mqdb_run_stateless/tests/
 cp -rfv tests/config docker/test/mqdb_run_stateless/tests/
 
 docker rm -f stateless-test >/dev/null 2>&1 || true
 docker build --rm=true -t run-stateless-test docker/test/mqdb_run_stateless
 
-docker run --rm --user root --cap-add=SYS_PTRACE -e MAX_RUN_TIME=9720 -e S3_URL="https://clickhouse-datasets.s3.amazonaws.com" -e ADDITIONAL_OPTIONS="--hung-check --print-time" --name stateless-test run-stateless-test
+docker run --rm --user root --volume=$WORKPATH/test_output:/test_output --cap-add=SYS_PTRACE -e MAX_RUN_TIME=9720 -e S3_URL="https://clickhouse-datasets.s3.amazonaws.com" -e ADDITIONAL_OPTIONS="--hung-check --print-time" --name stateless-test run-stateless-test
 
 docker rm -f stateless-test >/dev/null 2>&1 || true
 docker rmi -f run-stateless-test >/dev/null 2>&1 || true
diff --git a/docker/test/mqdb_run_stateless/run.sh b/docker/test/mqdb_run_stateless/run.sh
index 6572d6d44c..5f969780a8 100644
--- a/docker/test/mqdb_run_stateless/run.sh
+++ b/docker/test/mqdb_run_stateless/run.sh
@@ -110,7 +110,9 @@ function run_tests() {
         --skip 00000_prepare \
         01086_odbc_roundtrip 02049_clickhouse_local_merge_tree 01753_max_uri_size 01753_max_uri_size \
         01565_reconnect_after_client_error 01324_settings_documentation 01293_show_clusters \
-        01271_show_privileges 01158_zookeeper_log_long 01528_clickhouse_local_prepare_parts 01658_read_file_to_stringcolumn 01600_detach_permanently 01527_clickhouse_local_optimize 02047 01039 00993 02207 02117 02226 2>&1 |
+        01271_show_privileges 01158_zookeeper_log_long 01528_clickhouse_local_prepare_parts \
+        01658_read_file_to_stringcolumn 01600_detach_permanently 01527_clickhouse_local_optimize \
+        02047 01039 00993 02207 02117 02226 01606_git_import 2>&1 |
         ts '%Y-%m-%d %H:%M:%S' |
         tee -a test_output/test_result.txt
     set -e
-- 
2.32.1 (Apple Git-133)


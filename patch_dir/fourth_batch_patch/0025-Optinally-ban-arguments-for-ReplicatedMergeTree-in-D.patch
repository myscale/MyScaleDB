From 83476f572aff61bfa09b2fb7851076e8d3370d57 Mon Sep 17 00:00:00 2001
From: alesapin <alesapin@clickhouse.com>
Date: Sun, 25 Dec 2022 19:32:26 +0100
Subject: [PATCH 25/49] Optinally ban arguments for `ReplicatedMergeTree` in
 `DatabaseReplicated`

---
 src/Core/Settings.h                                      | 1 +
 src/Databases/DatabaseReplicated.cpp                     | 9 ++++++++-
 .../0_stateless/02232_allow_only_replicated_engine.sh    | 2 ++
 ...14_database_replicated_no_arguments_for_rmt.reference | 1 +
 .../02514_database_replicated_no_arguments_for_rmt.sql   | 9 +++++++++
 5 files changed, 21 insertions(+), 1 deletion(-)
 create mode 100644 tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.reference
 create mode 100755 tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.sql

diff --git a/src/Core/Settings.h b/src/Core/Settings.h
index 792c39efe7..f0d6f4ac09 100644
--- a/src/Core/Settings.h
+++ b/src/Core/Settings.h
@@ -1070,6 +1070,7 @@ class IColumn;
     M(UInt64, max_distributed_depth, 5, "Maximum distributed query depth", 0) \
     M(Bool, database_replicated_always_detach_permanently, false, "Execute DETACH TABLE as DETACH TABLE PERMANENTLY if database engine is Replicated", 0) \
     M(Bool, database_replicated_allow_only_replicated_engine, false, "Allow to create only Replicated tables in database with engine Replicated", 0) \
+    M(Bool, database_replicated_allow_replicated_engine_arguments, true, "Allow to create only Replicated tables in database with engine Replicated with explicit arguments", 0) \
     M(Bool, database_replicated_always_convert_table_to_replicated, false, "Always convert tables to Replicated tables in database with engine Replicated", 0) \
     M(String, database_replicated_default_zk_path_prefix, "", "Fill replicated database engine zk_path with this prefix + database name when creating a database. If empty, zk_path will not be set automatically", 0) \
     M(DistributedDDLOutputMode, distributed_ddl_output_mode, DistributedDDLOutputMode::THROW, "Format of distributed DDL query result", 0) \
diff --git a/src/Databases/DatabaseReplicated.cpp b/src/Databases/DatabaseReplicated.cpp
index b91e39b041..8d782bd2dd 100644
--- a/src/Databases/DatabaseReplicated.cpp
+++ b/src/Databases/DatabaseReplicated.cpp
@@ -401,7 +401,14 @@ void DatabaseReplicated::checkQueryValid(const ASTPtr & query, ContextPtr query_
             bool enable_functional_tests_helper = getContext()->getConfigRef().has("_functional_tests_helper_database_replicated_replace_args_macros");
 
             if (!enable_functional_tests_helper)
-                LOG_WARNING(log, "It's not recommended to explicitly specify zookeeper_path and replica_name in ReplicatedMergeTree arguments");
+            {
+                if (query_context->getSettingsRef().database_replicated_allow_replicated_engine_arguments)
+                    LOG_WARNING(log, "It's not recommended to explicitly specify zookeeper_path and replica_name in ReplicatedMergeTree arguments");
+                else
+                    throw Exception(ErrorCodes::INCORRECT_QUERY,
+                                    "It's not allowed to specify explicit zookeeper_path and replica_name for ReplicatedMergeTree arguments in Replicated database. "
+                                    "If you really want to specify them explicitly, enable setting database_replicated_allow_replicated_engine_arguments.");
+            }
 
             if (maybe_shard_macros && maybe_replica_macros)
                 return;
diff --git a/tests/queries/0_stateless/02232_allow_only_replicated_engine.sh b/tests/queries/0_stateless/02232_allow_only_replicated_engine.sh
index d04c8a98df..466ad8659e 100755
--- a/tests/queries/0_stateless/02232_allow_only_replicated_engine.sh
+++ b/tests/queries/0_stateless/02232_allow_only_replicated_engine.sh
@@ -16,3 +16,5 @@ ${CLICKHOUSE_CLIENT} --distributed_ddl_output_mode=none -n --query "set distribu
 ${CLICKHOUSE_CLIENT} --distributed_ddl_output_mode=none --user "user_${CLICKHOUSE_DATABASE}" -n --query "set distributed_ddl_entry_format_version=2; CREATE TABLE ${CLICKHOUSE_DATABASE}_db.tab_rmt (x UInt32) engine = ReplicatedMergeTree order by x;"
 ${CLICKHOUSE_CLIENT} --query "DROP DATABASE ${CLICKHOUSE_DATABASE}_db"
 ${CLICKHOUSE_CLIENT} -q "DROP USER user_${CLICKHOUSE_DATABASE}"
+
+${CLICKHOUSE_CLIENT} -q "drop table mute_stylecheck"
diff --git a/tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.reference b/tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.reference
new file mode 100644
index 0000000000..65ed303b6f
--- /dev/null
+++ b/tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.reference
@@ -0,0 +1 @@
+0|localhost	0		0	0
diff --git a/tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.sql b/tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.sql
new file mode 100755
index 0000000000..281870a44d
--- /dev/null
+++ b/tests/queries/0_stateless/02514_database_replicated_no_arguments_for_rmt.sql
@@ -0,0 +1,9 @@
+# Tags: replica, no-replicated-database
+
+create table mute_stylecheck (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/test/root', '{replica}') order by x;
+SET database_replicated_allow_replicated_engine_arguments=0, allow_experimental_database_replicated=1;
+CREATE DATABASE replicated_db engine = Replicated('/clickhouse/databases/test/replicated_db', '{shard}', '{replica}'); 
+CREATE TABLE replicated_db.tab_rmt_ok (x UInt32) engine = ReplicatedMergeTree order by x;
+CREATE TABLE replicated_db.tab_rmt_fail (x UInt32) engine = ReplicatedMergeTree('/clickhouse/tables/test/root/{shard}', '{replica}') order by x; -- { serverError 80 }
+DROP DATABASE replicated_db;
+DROP TABLE mute_stylecheck;
-- 
2.32.1 (Apple Git-133)


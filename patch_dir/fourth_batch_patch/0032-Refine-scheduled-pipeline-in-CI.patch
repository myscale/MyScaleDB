From f94432b484820d895b89a683d7d5bc3b2bcc9be0 Mon Sep 17 00:00:00 2001
From: Shanfeng Pang <shanfengp@moqi.ai>
Date: Mon, 29 May 2023 09:08:52 +0000
Subject: [PATCH 32/49] Refine scheduled pipeline in CI

---
 .gitlab-ci-build.yml                          |  6 ++
 .gitlab-ci-functional-test.yml                | 17 ++++++
 .gitlab-ci-integration-test.yml               |  6 ++
 .gitlab-ci-performance-test.yml               |  8 ++-
 .gitlab-ci-sanitizer-test.yml                 | 32 ++++++++++
 .gitlab-ci.yml                                | 58 +++++++++++++++----
 .../test/mqdb_run_stability/mqdb_server.yaml  |  9 +++
 7 files changed, 124 insertions(+), 12 deletions(-)

diff --git a/.gitlab-ci-build.yml b/.gitlab-ci-build.yml
index 810c60a358..ec1aeb8163 100644
--- a/.gitlab-ci-build.yml
+++ b/.gitlab-ci-build.yml
@@ -7,6 +7,7 @@ build_binary:
     KUBERNETES_CPU_LIMIT: 32
     KUBERNETES_MEMORY_REQUEST: 16Gi
     KUBERNETES_MEMORY_LIMIT: 32Gi
+  dependencies: ["check_pipeline_already_running"]
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA"
     when: always
@@ -42,6 +43,7 @@ build_with_sanitizer_asanbinary:
     KUBERNETES_CPU_LIMIT: 32
     KUBERNETES_MEMORY_REQUEST: 16Gi
     KUBERNETES_MEMORY_LIMIT: 32Gi
+  dependencies: ["check_pipeline_already_running"]
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-CKAsan"
     paths:
@@ -70,6 +72,7 @@ build_with_sanitizer_tsanbinary:
     KUBERNETES_CPU_LIMIT: 32
     KUBERNETES_MEMORY_REQUEST: 16Gi
     KUBERNETES_MEMORY_LIMIT: 32Gi
+  dependencies: ["check_pipeline_already_running"]
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-CKTsan"
     paths:
@@ -98,6 +101,7 @@ build_with_sanitizer_ubsanbinary:
     KUBERNETES_CPU_LIMIT: 32
     KUBERNETES_MEMORY_REQUEST: 16Gi
     KUBERNETES_MEMORY_LIMIT: 32Gi
+  dependencies: ["check_pipeline_already_running"]
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-CKUBsan"
     paths:
@@ -126,6 +130,7 @@ build_with_sanitizer_msanbinary:
     KUBERNETES_CPU_LIMIT: 32
     KUBERNETES_MEMORY_REQUEST: 16Gi
     KUBERNETES_MEMORY_LIMIT: 32Gi
+  dependencies: ["check_pipeline_already_running"]
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-CKMsan"
     paths:
@@ -148,6 +153,7 @@ build_for_integration_test:
     KUBERNETES_CPU_LIMIT: 32
     KUBERNETES_MEMORY_REQUEST: 16Gi
     KUBERNETES_MEMORY_LIMIT: 32Gi
+  dependencies: ["check_pipeline_already_running"]
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA"
     paths:
diff --git a/.gitlab-ci-functional-test.yml b/.gitlab-ci-functional-test.yml
index 78caeed528..97e8225b60 100644
--- a/.gitlab-ci-functional-test.yml
+++ b/.gitlab-ci-functional-test.yml
@@ -5,6 +5,8 @@ vector_search_test:
   needs:
     - job: build_binary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   parallel:
     matrix:
       - ARCH: amd64
@@ -12,6 +14,9 @@ vector_search_test:
   tags:
     - ${ARCH}
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
   script:
     - docker/builder/tools/vector-search-test.sh
@@ -26,6 +31,8 @@ smoke_test:
   needs:
     - job: build_binary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-smoke:1.2
   parallel:
     matrix:
@@ -52,6 +59,8 @@ stateless_test:
   needs:
     - job: build_binary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stateless-test"
     paths:
@@ -64,6 +73,9 @@ stateless_test:
   tags:
     - ${ARCH}
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
   script:
     - docker/builder/tools/stateless-test.sh
@@ -77,6 +89,8 @@ stateful_test:
   needs:
     - job: build_binary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stateful-test"
     paths:
@@ -89,6 +103,9 @@ stateful_test:
   tags:
     - ${ARCH}
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
   script:
     - docker/builder/tools/stateful-test.sh
diff --git a/.gitlab-ci-integration-test.yml b/.gitlab-ci-integration-test.yml
index 5cdc77b9e0..3143ae3be3 100644
--- a/.gitlab-ci-integration-test.yml
+++ b/.gitlab-ci-integration-test.yml
@@ -4,6 +4,8 @@ integration_test0:
   needs:
     - job: build_for_integration_test
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-integration:1.0
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-integration0"
@@ -22,6 +24,8 @@ integration_test1:
   needs:
     - job: build_for_integration_test
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-integration:1.0
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-integration1"
@@ -40,6 +44,8 @@ integration_test2:
   needs:
     - job: build_for_integration_test
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-integration:1.0
   artifacts:
     name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-integration2"
diff --git a/.gitlab-ci-performance-test.yml b/.gitlab-ci-performance-test.yml
index d12f9338e2..8bb986b0ff 100644
--- a/.gitlab-ci-performance-test.yml
+++ b/.gitlab-ci-performance-test.yml
@@ -4,6 +4,8 @@ performance_test0:
   needs:
     - job: build_binary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-performance:1.2
   parallel:
     matrix:
@@ -28,6 +30,8 @@ performance_test1:
   needs:
     - job: build_binary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-performance:1.2
   parallel:
     matrix:
@@ -47,11 +51,13 @@ performance_test1:
     - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false" && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH' # Trigger pipline during scheduled tasks
     - if: $CI_MERGE_REQUEST_LABELS == "test-performance"
 
-performance_test2:
+.performance_test2:
   stage: performance-test
   needs:
     - job: build_binary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-performance:1.2
   parallel:
     matrix:
diff --git a/.gitlab-ci-sanitizer-test.yml b/.gitlab-ci-sanitizer-test.yml
index 6aabca9a93..0da994c30d 100644
--- a/.gitlab-ci-sanitizer-test.yml
+++ b/.gitlab-ci-sanitizer-test.yml
@@ -5,6 +5,8 @@ stress_test_asan:
   needs:
     - job: build_with_sanitizer_asanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.2
   parallel:
     matrix:
@@ -30,6 +32,8 @@ stress_test_tsan:
   needs:
     - job: build_with_sanitizer_tsanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.2
   parallel:
     matrix:
@@ -55,6 +59,8 @@ stress_test_ubsan:
   needs:
     - job: build_with_sanitizer_ubsanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.2
   parallel:
     matrix:
@@ -80,6 +86,8 @@ stress_test_msan:
   needs:
     - job: build_with_sanitizer_msanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.2
   parallel:
     matrix:
@@ -105,6 +113,8 @@ vector-test-asan:
   needs:
     - job: build_with_sanitizer_asanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   parallel:
     matrix:
       - ARCH: amd64
@@ -117,6 +127,9 @@ vector-test-asan:
       - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
     when: always
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
   script:
     - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
@@ -134,6 +147,8 @@ vector-test-asan:
   needs:
     - job: build_with_sanitizer_tsanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   parallel:
     matrix:
       - ARCH: amd64
@@ -146,6 +161,9 @@ vector-test-asan:
       - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
     when: always
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
   script:
     - replace_openmp=true
@@ -164,6 +182,8 @@ vector-test-asan:
   needs:
     - job: build_with_sanitizer_msanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   parallel:
     matrix:
       - ARCH: amd64
@@ -176,6 +196,9 @@ vector-test-asan:
       - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
     when: always
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
   script:
     - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
@@ -192,6 +215,8 @@ vector-test-ubsan:
   needs:
     - job: build_with_sanitizer_ubsanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   parallel:
     matrix:
       - ARCH: amd64
@@ -204,6 +229,9 @@ vector-test-ubsan:
       - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
     when: always
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
   script:
     - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
@@ -220,6 +248,8 @@ fuzzer_test-asan:
   needs:
     - job: build_with_sanitizer_asanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-fuzzer:1.2
   parallel:
     matrix:
@@ -244,6 +274,8 @@ fuzzer_test-ubsan:
   needs:
     - job: build_with_sanitizer_ubsanbinary
       artifacts: true
+    - job: check_pipeline_already_running
+      artifacts: true
   image: harbor.internal.moqi.ai/mqdb/mqdb-test-fuzzer:1.2
   parallel:
     matrix:
diff --git a/.gitlab-ci.yml b/.gitlab-ci.yml
index d88b885b9b..039657e500 100644
--- a/.gitlab-ci.yml
+++ b/.gitlab-ci.yml
@@ -9,6 +9,11 @@ variables:
 
 image: harbor.internal.moqi.ai/mqdb/builder:2.6
 
+before_script:
+  - if [[ -f previous_pipeline_status.txt ]]; then
+    exit 0;
+    fi
+
 include:
   - "/.gitlab-ci-build.yml"
   - "/.gitlab-ci-functional-test.yml"
@@ -24,6 +29,7 @@ stages:
   - performance-test
   - failover-test
   - sanitizer-test
+  - update-pipeline-status
   - package
   - image
   - deploy
@@ -33,19 +39,30 @@ stages:
 check_pipeline_already_running:
   stage: check-pipeline
   image: harbor.internal.moqi.ai/mqdb/redis:7.0.10
-  rules:
-    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_TEST_IN_K8S == "false"'
-    # - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"'
+  artifacts:
+    paths:
+      - previous_pipeline_status.txt
   script:
+    - if [ "$CI_PIPELINE_SOURCE" != "schedule" ] || [ "$CI_TEST_IN_K8S" != "false" ]; then
+      echo "skip";
+      exit 0;
+      fi
     - if [ ! -n "$REDIS_HOST" ]; then echo "redis host unknown, Run the pipeline by default."; exit 0; fi
     - KEY_TIMEOUT=${EXPIRE_TIME:-604800}
-    - PIPELINE_UNIQUE_KEY=$CI_PIPELINE_SOURCE-$CI_COMMIT_SHA
+    - PIPELINE_UNIQUE_KEY=$CI_PIPELINE_SOURCE-$CI_COMMIT_BRANCH-$CI_COMMIT_SHA
     - RES=$(redis-cli -h ${REDIS_HOST} get ${PIPELINE_UNIQUE_KEY})
     - if [[ -n "$RES" ]]; then
-      echo "$RES, nothing to do";
+      if [[ "$RES" == "success" ]]; then
+      echo "The previous pipeline run successfully";
+      touch previous_pipeline_status.txt;
+      echo "$RES" > previous_pipeline_status.txt;
+      exit 0;
+      else
+      echo "The previous pipeline failed to run, please check soon!";
       exit 1;
+      fi;
       fi
-    - redis-cli -h ${REDIS_HOST} set ${PIPELINE_UNIQUE_KEY} "already running"
+    - redis-cli -h ${REDIS_HOST} set ${PIPELINE_UNIQUE_KEY} "worked but failed"
     - redis-cli -h ${REDIS_HOST} EXPIRE ${PIPELINE_UNIQUE_KEY} ${KEY_TIMEOUT}
 
 style_check:
@@ -60,7 +77,7 @@ style_check:
 
 build_package:
   stage: package
-  dependencies: []
+  dependencies: ["check_pipeline_already_running"]
   variables:
     KUBERNETES_CPU_REQUEST: 8
     KUBERNETES_CPU_LIMIT: 32
@@ -84,7 +101,7 @@ build_package:
 build_package_with_license:
   stage: package
   when: manual
-  dependencies: []
+  dependencies: ["check_pipeline_already_running"]
   variables:
     KUBERNETES_CPU_REQUEST: 8
     KUBERNETES_CPU_LIMIT: 32
@@ -103,8 +120,11 @@ build_package_with_license:
 
 build_image:
   stage: image
-  dependencies: ["build_package"]
+  dependencies: ["build_package","check_pipeline_already_running"]
   before_script:
+    - if [[ -f previous_pipeline_status.txt ]]; then
+      exit 0;
+      fi
     - docker/builder/tools/docker-info.sh
     - docker/builder/tools/docker-buildx.sh
   script:
@@ -117,7 +137,7 @@ build_image:
 build_saas_image:
   stage: image
   when: manual
-  dependencies: ["build_package"]
+  dependencies: ["build_package","check_pipeline_already_running"]
   before_script:
     - docker/builder/tools/docker-info.sh
     - docker/builder/tools/docker-buildx.sh
@@ -126,7 +146,7 @@ build_saas_image:
 
 upload_performance_file_to_s3:
   stage: deploy
-  dependencies: ["build_binary"]
+  dependencies: ["build_binary","check_pipeline_already_running"]
   image:
     name: minio/mc
     entrypoint: [""]
@@ -138,3 +158,19 @@ upload_performance_file_to_s3:
   script:
     # - mc cp artifacts/performance_pack_amd64.tar.gz cos/mqdb-release-1253802058/performance/performance_pack_amd64_${CI_COMMIT_SHORT_SHA}.tar.gz
     - mc cp artifacts/performance_pack_amd64.tar.gz cos/mqdb-release-1253802058/performance/performance_pack_amd64.tar.gz
+
+flag_pipeline_status:
+  stage: update-pipeline-status
+  image: harbor.internal.moqi.ai/mqdb/redis:7.0.10
+  # rules:
+  #   - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_TEST_IN_K8S == "false"'
+    # - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"'
+  script:
+    - if [ ! -n "$REDIS_HOST" ]; then echo "redis host unknown, Run the pipeline by default."; exit 0; fi
+    - KEY_TIMEOUT=${EXPIRE_TIME:-604800}
+    - PIPELINE_UNIQUE_KEY=$CI_PIPELINE_SOURCE-$CI_COMMIT_BRANCH-$CI_COMMIT_SHA
+    - redis-cli -h ${REDIS_HOST} set ${PIPELINE_UNIQUE_KEY} "success"
+    - redis-cli -h ${REDIS_HOST} EXPIRE ${PIPELINE_UNIQUE_KEY} ${KEY_TIMEOUT}
+  rules:
+    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"'
+
diff --git a/docker/test/mqdb_run_stability/mqdb_server.yaml b/docker/test/mqdb_run_stability/mqdb_server.yaml
index 82bf21387a..63ed00d9bc 100644
--- a/docker/test/mqdb_run_stability/mqdb_server.yaml
+++ b/docker/test/mqdb_run_stability/mqdb_server.yaml
@@ -81,6 +81,10 @@ spec:
               port: 9000
               protocol: TCP
               targetPort: tcp
+            - name: ssh
+              port: 22
+              protocol: TCP
+              targetPort: ssh
       - name: replica-service-template
         spec:
           type: ClusterIP
@@ -129,6 +133,11 @@ spec:
                 limits:
                   cpu: 4
                   memory: 8Gi
+          volumes:
+            - name: ssh
+              configMap:
+                name: ssh
+                defaultMode: 0600
 
     volumeClaimTemplates:
       - name: data-volume-claim-template
-- 
2.32.1 (Apple Git-133)


From b8426223b9769e2677ff2b98da3b6715c6759ef3 Mon Sep 17 00:00:00 2001
From: root <shelly@moqi.ai>
Date: Fri, 24 Mar 2023 11:24:43 +0800
Subject: [PATCH 27/51] drop useless build and config with asan or debug shell
 scripts

---
 scripts/build_on_linux_asan.sh   | 13 -------------
 scripts/build_on_linux_debug.sh  | 13 -------------
 scripts/config_on_linux_asan.sh  | 27 ---------------------------
 scripts/config_on_linux_debug.sh | 27 ---------------------------
 4 files changed, 80 deletions(-)
 delete mode 100644 scripts/build_on_linux_asan.sh
 delete mode 100644 scripts/build_on_linux_debug.sh
 delete mode 100644 scripts/config_on_linux_asan.sh
 delete mode 100755 scripts/config_on_linux_debug.sh

diff --git a/scripts/build_on_linux_asan.sh b/scripts/build_on_linux_asan.sh
deleted file mode 100644
index 595a353a79..0000000000
--- a/scripts/build_on_linux_asan.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/usr/bin/env bash
-set -e
-CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
-
-#ccache -s # uncomment to display CCache statistics
-cd $CURDIR/../build-asan/
-# Set the number of build jobs to the half of number of virtual CPU cores (rounded up).
-# By default, ninja use all virtual CPU cores, that leads to very high memory consumption without much improvement in build time.
-# Note that modern x86_64 CPUs use two-way hyper-threading (as of 2018).
-# Without this option my laptop with 16 GiB RAM failed to execute build due to full system freeze.
-
-JOBS=$(($(nproc || grep -c ^processor /proc/cpuinfo) - 2))
-ninja -j ${JOBS}
diff --git a/scripts/build_on_linux_debug.sh b/scripts/build_on_linux_debug.sh
deleted file mode 100644
index 844668f497..0000000000
--- a/scripts/build_on_linux_debug.sh
+++ /dev/null
@@ -1,13 +0,0 @@
-#!/usr/bin/env bash
-set -e
-CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
-
-#ccache -s # uncomment to display CCache statistics
-cd $CURDIR/../build_debug/
-# Set the number of build jobs to the half of number of virtual CPU cores (rounded up).
-# By default, ninja use all virtual CPU cores, that leads to very high memory consumption without much improvement in build time.
-# Note that modern x86_64 CPUs use two-way hyper-threading (as of 2018).
-# Without this option my laptop with 16 GiB RAM failed to execute build due to full system freeze.
-
-JOBS=$(($(nproc || grep -c ^processor /proc/cpuinfo) - 2))
-ninja -j ${JOBS}
diff --git a/scripts/config_on_linux_asan.sh b/scripts/config_on_linux_asan.sh
deleted file mode 100644
index 8b22bc7e09..0000000000
--- a/scripts/config_on_linux_asan.sh
+++ /dev/null
@@ -1,27 +0,0 @@
-#!/bin/bash
-set -e
-CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
-
-#ccache -s # uncomment to display CCache statistics
-mkdir -p $CURDIR/../build-asan/
-cd $CURDIR/../build-asan/
-export LD_LIBRARY_PATH=/usr/lib/llvm-13/lib:/opt/intel/oneapi/mkl/2021.4.0/lib/intel64/:${LD_LIBRARY_PATH}
-cmake -G Ninja .. -DCMAKE_C_COMPILER=$(command -v clang-13) \
-    -DCMAKE_CXX_COMPILER=$(command -v clang++-13) \
-    -DCMAKE_BUILD_TYPE=Release \
-    -DENABLE_CLICKHOUSE_ALL=OFF \
-    -DENABLE_CLICKHOUSE_SERVER=ON \
-    -DENABLE_CLICKHOUSE_CLIENT=ON \
-    -DENABLE_CLICKHOUSE_FORMAT=ON \
-    -DENABLE_CLICKHOUSE_BENCHMARK=ON \
-    -DENABLE_LIBRARIES=OFF \
-    -DENABLE_CURL=ON \
-    -DENABLE_S3=ON \
-    -DENABLE_SSL=ON \
-    -DENABLE_REPLXX=ON \
-    -DUSE_UNWIND=ON \
-    -DENABLE_UTILS=OFF \
-    -DENABLE_TESTS=OFF \
-    -DENABLE_RAPIDJSON=ON \
-    -DENABLE_LICENSE_CHECK=OFF \
-    -DSANITIZE=address
diff --git a/scripts/config_on_linux_debug.sh b/scripts/config_on_linux_debug.sh
deleted file mode 100755
index a6827688b0..0000000000
--- a/scripts/config_on_linux_debug.sh
+++ /dev/null
@@ -1,27 +0,0 @@
-#!/bin/bash
-set -e
-CURDIR=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
-
-#ccache -s # uncomment to display CCache statistics
-mkdir -p $CURDIR/../build_debug/
-cd $CURDIR/../build_debug/
-export LD_LIBRARY_PATH=/usr/lib/llvm-13/lib:/opt/intel/oneapi/mkl/2021.4.0/lib/intel64/:${LD_LIBRARY_PATH}
-cmake -G Ninja .. -DCMAKE_C_COMPILER=$(command -v clang-13) \
-    -DCMAKE_CXX_COMPILER=$(command -v clang++-13) \
-    -DCMAKE_BUILD_TYPE=Debug \
-    -DENABLE_CLICKHOUSE_ALL=OFF \
-    -DENABLE_CLICKHOUSE_SERVER=ON \
-    -DENABLE_CLICKHOUSE_CLIENT=ON \
-    -DENABLE_CLICKHOUSE_FORMAT=ON \
-    -DENABLE_CLICKHOUSE_BENCHMARK=ON \
-    -DENABLE_LIBRARIES=OFF \
-    -DENABLE_CURL=ON \
-    -DENABLE_S3=ON \
-    -DENABLE_SSL=ON \
-    -DENABLE_REPLXX=ON \
-    -DUSE_UNWIND=ON \
-    -DENABLE_UTILS=OFF \
-    -DENABLE_TESTS=OFF \
-    -DENABLE_RAPIDJSON=ON \
-    -DENABLE_LICENSE_CHECK=OFF
-
-- 
2.32.1 (Apple Git-133)


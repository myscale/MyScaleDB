####################################### PERFORMANCE TESTS ####################################
performance_test0:
  stage: performance-test
  needs:
    - job: build_binary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-performance:1.2
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-performance0"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_performance/test_output
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/performance-test.sh CI_TEST_IN_K8S ${CI_COMMIT_SHA} 0
    - ls -al artifacts
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false" && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "test-performance"

performance_test1:
  stage: performance-test
  needs:
    - job: build_binary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-performance:1.2
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-performance1"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_performance/test_output
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/performance-test.sh CI_TEST ${CI_COMMIT_SHA} 1
    - ls -al artifacts
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false" && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "test-performance"

.performance_test2:
  stage: performance-test
  needs:
    - job: build_binary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-performance:1.2
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-performance2"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_performance/test_output
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/performance-test.sh CI_TEST ${CI_COMMIT_SHA} 2
    - ls -al artifacts
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false" && $CI_COMMIT_REF_NAME != $CI_DEFAULT_BRANCH' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "test-performance"

########## VECTOR-DB ###########
vector_db_test:
  stage: benchmark
  dependencies: ["build_image"]
  image: harbor.internal.moqi.ai/tools/k8s-gitlab-ci:2.0.1
  script:
    - source docker/builder/tools/version.sh
    - mkdir -p $HOME/Downloads/
    - cp $KUBECONFIG_CONTENT $HOME/Downloads/cls-config
    - export KUBECONFIG=$KUBECONFIG:$HOME/Downloads/cls-config
    - 'kubectl get pods -n vector-db-ci ||:'
    - cd docker/test/mqdb_run_vector_db_test
    - 'kubectl delete ns vector-db-ci ||:'
    - kubectl create ns vector-db-ci
    - bash config.sh "$VERSION_STRING" "$GIT_COMMIT" "$CI_COMMIT_BRANCH" "$CI_COMMIT_SHA" "$CI_COMMIT_MESSAGE"
    - kubectl apply -f mqdb_server_tmp.yaml
    - sleep 60
    - if ! kubectl wait pods chi-testing-testing-0-0-0 -n vector-db-ci --for=condition=ready --timeout=3000s; then echo "setup vector-db-benchmark faild" && kubectl delete ns vector-db-ci; exit 1; fi
    - kubectl apply -f vector_db_benchmark_tmp.yaml
  rules:
  # [TODO] Add more policy
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "benchmark"' # Trigger pipline during scheduled tasks
########## STRESS TESTS ##########
# TODO build test image for arm64
stress_test_asan:
  stage: sanitizer-test
  needs:
    - job: build_with_sanitizer_asanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.4
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stressasan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stress/test_output
    when: always
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/stress-test.sh CI_TEST_IN_K8S ${CI_COMMIT_SHA}
    - docker/builder/tools/check_job_states.sh mqdb_run_stress
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

stress_test_tsan:
  stage: sanitizer-test
  needs:
    - job: build_with_sanitizer_tsanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.4
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stresstsan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stress/test_output
    when: always
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/stress-test.sh CI_TEST_IN_K8S ${CI_COMMIT_SHA}
    - docker/builder/tools/check_job_states.sh mqdb_run_stress
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

stress_test_ubsan:
  stage: sanitizer-test
  needs:
    - job: build_with_sanitizer_ubsanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.4
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stressubsan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stress/test_output
    when: always
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/stress-test.sh CI_TEST_IN_K8S ${CI_COMMIT_SHA}
    - docker/builder/tools/check_job_states.sh mqdb_run_stress
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

stress_test_msan:
  stage: sanitizer-test
  needs:
    - job: build_with_sanitizer_msanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stress:1.4
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stressmsan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stress/test_output
    when: always
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/stress-test.sh CI_TEST_IN_K8S ${CI_COMMIT_SHA}
    - docker/builder/tools/check_job_states.sh mqdb_run_stress
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

vector-test-asan:
  stage: sanitizer-test
  needs:
    - job: build_with_sanitizer_asanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-vectorasan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
    when: always
  before_script:
    - if [[ -f previous_pipeline_status.txt ]]; then
      exit 0;
      fi
    - docker/builder/tools/docker-info.sh
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - ADDRESS_SANITIZER_TEST=true docker/builder/tools/vector-search-test.sh
    # - docker/builder/tools/check_job_states.sh mqdb_run_stateless
    - STATUS=$(cat docker/test/mqdb_run_stateless/test_output/check_status.tsv| awk '{print $2}'| awk -F, '{print $1}')
    - if [[ $STATUS == "Timeout" ]]; then cat docker/test/mqdb_run_stateless/test_output/check_status.tsv; exit 1; fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

# disable TSAN due to #89
.vector-test-tsan:
  stage: sanitizer-test
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stateless:1.4
  needs:
    - job: build_with_sanitizer_tsanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-vectortsan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
    when: always
  before_script:
    - if [[ -f previous_pipeline_status.txt ]]; then
      exit 0;
      fi
  script:
    - replace_openmp=true
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/vector-search-test.sh $replace_openmp
    # - docker/builder/tools/check_job_states.sh mqdb_run_stateless
    - STATUS=$(cat docker/test/mqdb_run_stateless/test_output/check_status.tsv| awk '{print $2}'| awk -F, '{print $1}')
    - if [[ $STATUS == "Timeout" ]]; then cat docker/test/mqdb_run_stateless/test_output/check_status.tsv; exit 1; fi
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

# disable MSAN due to #89
.vector-test-msan:
  stage: sanitizer-test
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stateless:1.4
  needs:
    - job: build_with_sanitizer_msanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-vectormsan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
    when: always
  before_script:
    - if [[ -f previous_pipeline_status.txt ]]; then
      exit 0;
      fi
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/vector-search-test.sh
    - docker/builder/tools/check_job_states.sh mqdb_run_stateless with_sanitizer
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

vector-test-ubsan:
  stage: sanitizer-test
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stateless:1.4
  needs:
    - job: build_with_sanitizer_ubsanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-vectorubsan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
    when: always
  before_script:
    - if [[ -f previous_pipeline_status.txt ]]; then
      exit 0;
      fi
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/vector-search-test.sh
    - docker/builder/tools/check_job_states.sh mqdb_run_stateless with_sanitizer
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

fuzzer_test-asan:
  stage: sanitizer-test
  needs:
    - job: build_with_sanitizer_asanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-fuzzer:1.4
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-fuzzasan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_fuzzer/test_output
    when: always
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/fuzz-test.sh CI_TEST_IN_K8S ${CI_COMMIT_SHA}
    - docker/builder/tools/check_job_states.sh mqdb_run_fuzzer
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"
fuzzer_test-ubsan:
  stage: sanitizer-test
  needs:
    - job: build_with_sanitizer_ubsanbinary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-fuzzer:1.4
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-fuzzubsan"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_fuzzer/test_output
    when: always
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/fuzz-test.sh CI_TEST_IN_K8S ${CI_COMMIT_SHA}
    - docker/builder/tools/check_job_states.sh mqdb_run_fuzzer
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $CI_TEST_IN_K8S == "false"' # Trigger pipline during scheduled tasks
    - if: $CI_MERGE_REQUEST_LABELS == "sanitizer-test"

######################################## VECTOR TESTS ########################################
######### VECTOR TESTS ###########
vector_search_test:
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stateless:1.4
  stage: functional-test
  needs:
    - job: build_binary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  before_script:
    - if [[ -f previous_pipeline_status.txt ]]; then
      exit 0;
      fi
  script:
    - docker/builder/tools/vector-search-test.sh
    - if [[ ${ARCH} == "amd64" ]];then docker/builder/tools/check_job_states.sh mqdb_run_stateless; fi
  rules:
    - if: '$CI_TEST_IN_K8S == "false"'
      changes:
        - src/**/*
        - tests/**/*
        - contrib/**/*
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: manual
      allow_failure: true

###################################### FUNCTIONAL TESTS ######################################
########## SMOKE TESTS ###########
smoke_test:
  stage: functional-test
  needs:
    - job: build_binary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-smoke:1.2
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-smoke"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_smoke/test_output
    when: always
  script:
    - pwd && echo $CI_PROJECT_DIR && echo ${CI_COMMIT_SHA}
    - docker/builder/tools/smoke-test.sh CI_TEST ${CI_COMMIT_SHA}
    - docker/builder/tools/check_job_states.sh mqdb_run_smoke
  rules:
    - if: '$CI_TEST_IN_K8S == "false"'
      changes:
        - src/**/*
        - tests/**/*
        - contrib/**/*
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: manual
      allow_failure: true

### FUNCTIONAL STATELESS TESTS ###
# TODO Split stateless/stateful tests pipline
stateless_test:
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stateless:1.4
  stage: functional-test
  needs:
    - job: build_binary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stateless-test"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateless/test_output
    when: always
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  before_script:
    - if [[ -f previous_pipeline_status.txt ]]; then
      exit 0;
      fi
  script:
    - docker/builder/tools/stateless-test.sh
    - if [[ ${ARCH} == "amd64" ]];then docker/builder/tools/check_job_states.sh mqdb_run_stateless; fi
  rules:
    - if: '$CI_TEST_IN_K8S == "false"'
      changes:
        - src/**/*
        - tests/**/*
        - contrib/**/*
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: manual
      allow_failure: true

### FUNCTIONAL STATEFUL TESTS ####
stateful_test:
  image: harbor.internal.moqi.ai/mqdb/mqdb-test-stateless:1.4
  stage: functional-test
  needs:
    - job: build_binary
      artifacts: true
    - job: check_pipeline_already_running
      artifacts: true
  artifacts:
    name: "mqdb-$CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA-stateful-test"
    paths:
      - $CI_PROJECT_DIR/docker/test/mqdb_run_stateful/test_output
    when: always
  parallel:
    matrix:
      - ARCH: amd64
      # - ARCH: arm64
  tags:
    - ${ARCH}
  before_script:
    - if [[ -f previous_pipeline_status.txt ]]; then
      exit 0;
      fi
  script:
    - docker/builder/tools/stateful-test.sh
    - if [[ ${ARCH} == "amd64" ]];then docker/builder/tools/check_job_states.sh mqdb_run_stateful; fi
  rules:
    - if: '$CI_TEST_IN_K8S == "false"'
      changes:
        - src/**/*
        - tests/**/*
        - contrib/**/*
    - if: $CI_PIPELINE_SOURCE != "schedule"
      when: manual
      allow_failure: true
